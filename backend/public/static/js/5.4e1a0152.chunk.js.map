{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/Card.js","shared/components/UIElements/Modal.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","Card","style","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","ReactDOM","createPortal","document","getElementById","Modal","Fragment","show","onCancel","in","mountOnEnter","unmountOnExit","timeout","classNames","Map","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","current","Marker","position","ref","PlaceItem","auth","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","address","coordinates","console","log","src","image","alt","title","description","isLoggedIn","id","PlaceList","items","length","place","key","imageUrl","creatorId","creator","location","DUMMY_PLACES","lat","lng","UserPlaces","userId","useParams","loadedPlaces","filter"],"mappings":"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","file":"static/js/5.4e1a0152.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useRef, useEffect } from 'react';\r\n\r\nimport './Map.css';\r\n\r\nconst Map = props => {\r\n  const mapRef = useRef();\r\n  \r\n  const { center, zoom } = props;\r\n\r\n  useEffect(() => {\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      center: center,\r\n      zoom: zoom\r\n    });\r\n  \r\n    new window.google.maps.Marker({ position: center, map: map });\r\n  }, [center, zoom]);  \r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./PlaceItem.css\";\r\n\r\nconst PlaceItem = (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n    console.log(\"DELETING...\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          <div className=\"place-item__image\">\r\n            <img src={props.image} alt={props.title} />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.isLoggedIn && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n\r\n            {auth.isLoggedIn && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport PlaceItem from './PlaceItem';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport './PlaceList.css';\r\n\r\nconst PlaceList = props => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found. Maybe create one?</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map(place => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.imageUrl}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport PlaceList from '../components/PlaceList';\r\n\r\nconst DUMMY_PLACES = [\r\n  {\r\n    id: 'p1',\r\n    title: 'Empire State Building',\r\n    description: 'One of the most famous sky scrapers in the world!',\r\n    imageUrl:\r\n      'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\r\n    address: '20 W 34th St, New York, NY 10001',\r\n    location: {\r\n      lat: 40.7484405,\r\n      lng: -73.9878584\r\n    },\r\n    creator: 'u1'\r\n  },\r\n  {\r\n    id: 'p2',\r\n    title: 'Emp. State Building',\r\n    description: 'One of the most famous sky scrapers in the world!',\r\n    imageUrl:\r\n      'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\r\n    address: '20 W 34th St, New York, NY 10001',\r\n    location: {\r\n      lat: 40.7484405,\r\n      lng: -73.9878584\r\n    },\r\n    creator: 'u2'\r\n  }\r\n];\r\n\r\nconst UserPlaces = () => {\r\n  const userId = useParams().userId;\r\n  const loadedPlaces = DUMMY_PLACES.filter(place => place.creator === userId);\r\n  return <PlaceList items={loadedPlaces} />;\r\n};\r\n\r\nexport default UserPlaces;\r\n"],"sourceRoot":""}