{"version":3,"sources":["shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"names":["Avatar","props","className","style","src","image","alt","width","height","UserItem","Card","to","id","process","name","placeCount","UsersList","items","length","map","user","key","places","Users","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedUsers","setLoadedUsers","useEffect","a","responseData","users","fetchUsers","Fragment","ErrorModal","onClear","LoadingSpinner"],"mappings":"uOAgBeA,G,MAZA,SAAAC,GACb,OACE,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACxD,yBACEC,IAAKH,EAAMI,MACXC,IAAKL,EAAMK,IACXH,MAAO,CAAEI,MAAON,EAAMM,MAAOC,OAAQP,EAAMM,Y,QCoBpCE,G,MAvBE,SAACR,GAChB,OACE,wBAAIC,UAAU,aACZ,kBAACQ,EAAA,EAAD,CAAMR,UAAU,sBACd,kBAAC,IAAD,CAAMS,GAAE,WAAMV,EAAMW,GAAZ,YACN,yBAAKV,UAAU,oBACb,kBAAC,EAAD,CACEG,MAAK,UAAKQ,8CAAL,YAAwCZ,EAAMI,OACnDC,IAAKL,EAAMa,QAGf,yBAAKZ,UAAU,mBACb,4BAAKD,EAAMa,MACX,4BACGb,EAAMc,WADT,IAC2C,IAArBd,EAAMc,WAAmB,QAAU,gBCWtDC,G,MA1BG,SAAAf,GAChB,OAA2B,IAAvBA,EAAMgB,MAAMC,OAEZ,yBAAKhB,UAAU,UACb,kBAACQ,EAAA,EAAD,KACE,iDAON,wBAAIR,UAAU,cACXD,EAAMgB,MAAME,KAAI,SAAAC,GAAI,OACnB,kBAAC,EAAD,CACEC,IAAKD,EAAKR,GACVA,GAAIQ,EAAKR,GACTP,MAAOe,EAAKf,MACZS,KAAMM,EAAKN,KACXC,WAAYK,EAAKE,OAAOJ,e,wBCYnBK,UA9BD,WAAO,IAAD,EACoCC,cAA9CC,EADU,EACVA,UAAWC,EADD,EACCA,MAAOC,EADR,EACQA,YAAaC,EADrB,EACqBA,WADrB,EAEoBC,qBAFpB,mBAEXC,EAFW,KAEEC,EAFF,KAiBlB,OAbAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,+EAEYN,EACzBd,wDAHa,OAETqB,EAFS,OAMfH,EAAeG,EAAaC,OANb,uGAAH,qDAShBC,KACC,CAACT,IAGF,kBAAC,IAAMU,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYZ,MAAOA,EAAOa,QAASX,IAClCH,GACC,yBAAKvB,UAAU,UACb,kBAACsC,EAAA,EAAD,QAGFf,GAAaK,GAAe,kBAAC,EAAD,CAAWb,MAAOa","file":"static/js/8.77d001cd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Avatar.css';\r\n\r\nconst Avatar = props => {\r\n  return (\r\n    <div className={`avatar ${props.className}`} style={props.style}>\r\n      <img\r\n        src={props.image}\r\n        alt={props.alt}\r\n        style={{ width: props.width, height: props.width }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport \"./UserItem.css\";\r\n\r\nconst UserItem = (props) => {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar\r\n              image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.name}\r\n            />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from 'react';\r\n\r\nimport UserItem from './UserItem';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './UsersList.css';\r\n\r\nconst UsersList = props => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No users found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {props.items.map(user => (\r\n        <UserItem\r\n          key={user.id}\r\n          id={user.id}\r\n          image={user.image}\r\n          name={user.name}\r\n          placeCount={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport UsersList from \"../components/UsersList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst Users = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users\"\r\n        );\r\n\r\n        setLoadedUsers(responseData.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}